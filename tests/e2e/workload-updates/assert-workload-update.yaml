apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 2 # unsupported Node.js version (v8.17.0 < v14) - not instrumented, but template was updated by test
  labels:
    app: nodejs-unsupported-version
  name: nodejs-unsupported-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: nodejs-unsupported-version
  template:
    metadata:
      labels:
        app: nodejs-unsupported-version
      annotations:
        odigos-test-step: "2"
    spec:
      containers:
        - image: public.ecr.aws/odigos/nodejs-unsupported-version:v0.0.1
          imagePullPolicy: IfNotPresent
          name: nodejs-unsupported-version
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
status:
  availableReplicas: 1
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: nodejs-very-old-version
  name: nodejs-very-old-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: nodejs-very-old-version
  template:
    metadata:
      labels:
        app: nodejs-very-old-version
      annotations:
        odigos-test-step: "2"
    spec:
      containers:
        - image: public.ecr.aws/odigos/nodejs-very-old-version:v0.0.1
          imagePullPolicy: IfNotPresent
          name: nodejs-very-old-version
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: nodejs-minimum-version
  name: nodejs-minimum-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: nodejs-minimum-version
  template:
    metadata:
      labels:
        app: nodejs-minimum-version
      annotations:
        odigos-test-step: "2"
    spec:
      containers:
        - name: nodejs-minimum-version
          image: public.ecr.aws/odigos/nodejs-minimum-version:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: nodejs-latest-version
  name: nodejs-latest-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: nodejs-latest-version
  template:
    metadata:
      labels:
        app: nodejs-latest-version
      annotations:
        odigos-test-step: "2"
    spec:
      containers:
        - name: nodejs-latest-version
          image: public.ecr.aws/odigos/nodejs-latest-version:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: nodejs-dockerfile-env
  name: nodejs-dockerfile-env
  namespace: default
spec:
  selector:
    matchLabels:
      app: nodejs-dockerfile-env
  template:
    spec:
      containers:
        - name: nodejs-dockerfile-env
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: nodejs-manifest-env
  name: nodejs-manifest-env
  namespace: default
spec:
  selector:
    matchLabels:
      app: nodejs-manifest-env
  template:
    spec:
      containers:
        - name: nodejs-manifest-env
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 2 # C++ is not supported - not instrumented, but template was updated by test
  labels:
    app: cpp-http-server
  name: cpp-http-server
  namespace: default
spec:
  selector:
    matchLabels:
      app: cpp-http-server
  template:
    metadata:
      labels:
        app: cpp-http-server
      annotations:
        odigos-test-step: "2"
    spec:
      containers:
        - image: public.ecr.aws/odigos/cpp-http-server:v0.0.1
          imagePullPolicy: IfNotPresent
          name: cpp-http-server
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
status:
  availableReplicas: 1
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: java-supported-version
  name: java-supported-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: java-supported-version
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/java-supported-version:v0.0.1
          name: java-supported-version
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: java-azul
  name: java-azul
  namespace: default
spec:
  selector:
    matchLabels:
      app: java-azul
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/java-azul:v0.0.1
          name: java-azul
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: java-supported-docker-env
  name: java-supported-docker-env
  namespace: default
spec:
  selector:
    matchLabels:
      app: java-supported-docker-env
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/java-supported-docker-env:v0.0.1
          name: java-supported-docker-env
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: java-supported-manifest-env
  name: java-supported-manifest-env
  namespace: default
spec:
  selector:
    matchLabels:
      app: java-supported-manifest-env
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/java-supported-manifest-env:v0.0.1
          name: java-supported-manifest-env
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: java-latest-version
  name: java-latest-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: java-latest-version
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/java-latest-version:v0.0.1
          name: java-latest-version
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: java-old-version
  name: java-old-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: java-old-version
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/java-old-version:v0.0.1
          name: java-old-version
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: java-unique-exec
  name: java-unique-exec
  namespace: default
spec:
  selector:
    matchLabels:
      app: java-unique-exec
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/java-unique-exec:v0.0.1
          name: java-unique-exec
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: python-latest-version
  name: python-latest-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: python-latest-version
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/python-latest-version:v0.0.1
          name: python-latest-version
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: python-alpine
  name: python-alpine
  namespace: default
spec:
  selector:
    matchLabels:
      app: python-alpine
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/python-alpine:v0.0.1
          name: python-alpine
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: python-min-version
  name: python-min-version
  namespace: default
spec:
  selector:
    matchLabels:
      app: python-min-version
  template:
    spec:
      containers:
        - image: public.ecr.aws/odigos/python-min-version:v0.0.1
          name: python-min-version
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 2 # unsupported Python version (v3.6.15 < v3.8) - not instrumented, but template was updated by test
  labels:
    app: python-not-supported
  name: python-not-supported
  namespace: default
spec:
  selector:
    matchLabels:
      app: python-not-supported
  template:
    metadata:
      labels:
        app: python-not-supported
      annotations:
        odigos-test-step: "2"
    spec:
      containers:
        - image: public.ecr.aws/odigos/python-not-supported:v0.0.1
          imagePullPolicy: IfNotPresent
          name: python-not-supported
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
          - name: DJANGO_SETTINGS_MODULE
            value: "myapp.settings"
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
status:
  availableReplicas: 1
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  name: dotnet8-musl
  namespace: default
  labels:
    app: dotnet8-musl
spec:
  selector:
    matchLabels:
      app: dotnet8-musl
  template:
    metadata:
      labels:
        app: dotnet8-musl
      annotations:
        odigos-test-step: '2'
    spec:
      containers:
        - name: dotnet8-musl
          image: public.ecr.aws/odigos/dotnet8-musl:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  name: dotnet6-musl
  namespace: default
  labels:
    app: dotnet6-musl
spec:
  selector:
    matchLabels:
      app: dotnet6-musl
  template:
    metadata:
      labels:
        app: dotnet6-musl
      annotations:
        odigos-test-step: '2'
    spec:
      containers:
        - name: dotnet6-musl
          image: public.ecr.aws/odigos/dotnet6-musl:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  name: dotnet8-glibc
  namespace: default
  labels:
    app: dotnet8-glibc
spec:
  selector:
    matchLabels:
      app: dotnet8-glibc
  template:
    metadata:
      labels:
        app: dotnet8-glibc
      annotations:
        odigos-test-step: '2'
    spec:
      containers:
        - name: dotnet8-glibc
          image: public.ecr.aws/odigos/dotnet8-glibc:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  name: dotnet6-glibc
  namespace: default
  labels:
    app: dotnet6-glibc
spec:
  selector:
    matchLabels:
      app: dotnet6-glibc
  template:
    metadata:
      labels:
        app: dotnet6-glibc
      annotations:
        odigos-test-step: '2'
    spec:
      containers:
        - name: dotnet6-glibc
          image: public.ecr.aws/odigos/dotnet6-glibc:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 2 # python-other-agent is not being instrumented, only updated by test
  labels:
    app: python-other-agent
  name: python-other-agent
  namespace: default
spec:
  selector:
    matchLabels:
      app: python-other-agent
  template:
    metadata:
      labels:
        app: python-other-agent
      annotations:
        odigos-test-step: "2"
    spec:
      containers:
        - name: python-other-agent
          image: public.ecr.aws/odigos/python-other-agent:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
          - name: DJANGO_SETTINGS_MODULE
            value: "myapp.settings"
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
status:
  availableReplicas: 1
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 3
  labels:
    app: python-gunicorn-server
  name: python-gunicorn-server
  namespace: default
spec:
  selector:
    matchLabels:
      app: python-gunicorn-server
  template:
    spec:
      containers:
        - name: python-gunicorn-server
status:
  availableReplicas: 1
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
